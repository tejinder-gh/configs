# Performance & Core Setup
skip_global_compinit=1
DISABLE_AUTO_UPDATE=true
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Oh My Zsh & Theme
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"

# PowerLevel10k Configuration
POWERLEVEL9K_INSTANT_PROMPT=quiet
POWERLEVEL9K_DISABLE_HOT_RELOAD=true
POWERLEVEL9K_COLOR_SCHEME="dark"

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
  os_icon
  dir
  vcs
  node_version
  prompt_char
)

POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
  status
  command_execution_time
  background_jobs
  time
)

# Directory settings
POWERLEVEL9K_DIR_MAX_LENGTH=3
POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_last
POWERLEVEL9K_DIR_FOREGROUND=4
POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=4
POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=4

# Git settings
POWERLEVEL9K_VCS_GIT_HOOKS=(vcs-detect-changes git-untracked git-aheadbehind git-stash git-remotebranch git-tagname)
POWERLEVEL9K_VCS_CLEAN_FOREGROUND=2
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=3
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=2
POWERLEVEL9K_VCS_CONFLICTED_FOREGROUND=3
POWERLEVEL9K_VCS_LOADING_FOREGROUND=8

# Status and timing
POWERLEVEL9K_STATUS_OK_FOREGROUND=2
POWERLEVEL9K_STATUS_ERROR_FOREGROUND=1
POWERLEVEL9K_TIME_FOREGROUND=6
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=3
POWERLEVEL9K_NODE_VERSION_FOREGROUND=2

# History Configuration
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.cache/zsh/history
setopt SHARE_HISTORY HIST_IGNORE_SPACE EXTENDED_HISTORY HIST_VERIFY 
setopt HIST_EXPIRE_DUPS_FIRST HIST_IGNORE_DUPS HIST_SAVE_NO_DUPS INC_APPEND_HISTORY

# Directory Navigation
setopt AUTO_CD AUTO_PUSHD PUSHD_IGNORE_DUPS PUSHD_MINUS

# Completion System
autoload -U compinit colors
colors
zstyle ":completion:*" menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)

# Environment Variables
export DEV="$HOME/Developer"
export TN="$DEV/TN"
export EDITOR="vscode"
export KEYTIMEOUT=1
export AUTO_NOTIFY_THRESHOLD=20

# Path Configuration
path=(
  /opt/homebrew/opt/node@18/bin
  /opt/homebrew/opt/icu4c/{bin,sbin}
  "$HOME/.jenv/bin"
  "$HOME/.local/bin"
  $path
)
export PATH

# Plugin Configuration
plugins=(
  git
  auto-notify
  zsh-autosuggestions
  zsh-history-substring-search
  web-search
  zsh-syntax-highlighting
)

source "$ZSH/oh-my-zsh.sh"

# Development Tools
eval "$(jenv init -)"

# NVM Configuration
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && source "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && source "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

# Key Bindings
bindkey "^e" edit-command-line
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
bindkey -s "^o" "lfcd\n"

# Utility Functions
lfcd() {
  tmp="$(mktemp)"
  cd -last-dir-path="$tmp" "$@"
  if [ -f "$tmp" ]; then
    dir="$(cat "$tmp")"
    rm -f "$tmp"
    [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
  fi
}

extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2) tar xjf "$1" ;;
      *.tar.gz)  tar xzf "$1" ;;
      *.bz2)     bunzip2 "$1" ;;
      *.rar)     unrar x "$1" ;;
      *.gz)      gunzip "$1" ;;
      *.tar)     tar xf "$1" ;;
      *.tbz2)    tar xjf "$1" ;;
      *.tgz)     tar xzf "$1" ;;
      *.zip)     unzip "$1" ;;
      *.Z)       uncompress "$1" ;;
      *.7z)      7z x "$1" ;;
      *)         echo "'$1' cannot be extracted" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

mkcd() { mkdir -p "$1" && cd "$1"; }
killport() { lsof -i tcp:"$1" | awk "NR!=1 {print \$2}" | xargs kill -9; }
copy() { pbcopy <(pbpaste | eval "$@"); }

gitclean() {
  git checkout main
  git pull
  git fetch -p
  git branch -vv | grep ": gone]" | awk "{print \$1}" | xargs git branch -D
}

# Aliases
## System Utils
alias shutdown="sudo shutdown -h now"
alias restart="sudo shutdown -r now"
alias port="lsof -i tcp:"
alias wifiPass="security find-generic-password -wa"
alias space="df -h"
alias myip="ifconfig en0 | grep inet"
alias localip="ipconfig getifaddr en0"
alias processes="ps -ax"
alias serve8000="python3 -m http.server"
alias openFinder="open -a Finder ./"
alias listen="lsof -P -i -n"
alias cpu="top -o cpu"
alias mem="top -o rsize"
alias diskspace="df -P -kHl"
alias weather="curl wttr.in"

## Config Management
alias zshrc="code ~/.zshrc"
alias notes="code $DEV/configs/notes/notes.txt"
alias commitconfig="cd $DEV/configs && git add . && git commit -m 'Updating config' && git push"
alias setupconfig="cd $DEV && git clone git@github.com:tejinder-pal-singh/configs.git"
alias updateconfig="cp ~/.zshrc $DEV/configs/~/zshrc.txt && cp $DEV/Library/Application\ Support/Code/User/settings.json $DEV/configs/vscode/settings.json && commitconfig"
alias syncZshrc="cp ~/.zshrc $DEV/configs/~/zshrc.txt && commitconfig"

## Development
alias dc="docker-compose"
alias dps="docker ps"
alias dex="docker exec -it"
alias cl="git clone"
alias gc="git checkout"
alias gcm="git checkout main"
alias gac="git add . && git commit -m"
alias gl="git log --graph --decorate --oneline"
alias gst="git status -sb"
alias dsstore="find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch"
alias nr="npm run"
alias freshinstall="rm -rf package-lock.json node_modules && npm i"
alias ni="npm install --prefer-offline --no-audit --progress=false"
alias yi="yarn install"
alias lintFix="npx eslint src/ --fix"

## Chrome Management
alias danger="$HOME/tejindersingh/danger.sh dev_profile http://localhost:3000 http://home.tndev.aws.talentneuron.com/home && tnemail"
alias rsyncChromeProfile="rsync -a --exclude='*.lock' $HOME/Library/Application\ Support/Google/Chrome/Default/ $HOME/chrome_profiles/dev_test/"
alias chrome="open -n -a /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args && tnemail"
alias yt="echo 'document.getElementsByClassName(\"video-stream html5-main-video\")[0].playbackRate = 3' | copy"

## TN Project Specific
alias tnurl="echo http://homepage.tndev.aws.gartner.com/home | copy"
alias tnemail="echo tejinder.singh@talentneuron.com | copy"
alias tn="cd $TN"
alias cc="cd $TN/components-library"
alias tnr="cd $TN/gemini"
alias tnr-ui="cd $TN/gemini/memberweb/react"
alias tnp="cd $TN/talentneuron-plan2.x---platform"
alias tnp-ui="cd $TN/talentneuron-plan2.x---platform/sourcecode/tnp.web/web.client"
alias removecc="rm -rf node_modules/tn-components-library"
alias removeccc="rm -rf yarn.lock package-lock.json node_modules/tn-components-library && ni"
alias installcc="rm -rf node_modules/tn-components-library && cd $TN/components-library && npm run build && npm i $TN/components-library/"
alias runcc="cd $TN/components-library && code . && npm run storybook && danger"
alias runtnr="cd $TN/gemini/memberweb/react/web.client/ && code . && npm start && danger"
alias opentnr="code $TN/gemini/memberweb/react/web.client/"
alias runtnp="cd $TN/talentneuron-plan2.x---platform/sourcecode/tnp.web/web.client && code . && npm start && danger"
alias opentnp="code $TN/talentneuron-plan2.x---platform/sourcecode/tnp.web/web.client"
alias generatefont="npm run generate-font && npm run build"
alias addkey="/usr/bin/ssh-add --apple-use-keychain ~/.ssh/TN/ed25519"

## AI Tools
alias llama3="ollama run llama3.2"
alias qwen="ollama run qwen2.5-coder:32b"
alias aiui="docker run -d -p 8080:8080 -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://host.docker.internal:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main"

# Load configurations and plugins
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
